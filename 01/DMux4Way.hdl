// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Put your code here:

    // 11, 01, 10, 00
    
    Xor(a=sel[0], b=sel[1], out=selNotEquals); //tells us if sel[0] is different than sel[1]
    Not(in=selNotEquals, out=selEquals);
    Not(in=sel[0], out=notSel0);
    And(a=selNotEquals, b=notSel0, out=sel10); // true if sel[0] == 1 and sel not equals
    And(a=selNotEquals, b=sel[0], out=sel01); // true if sel[0] == 0 and sel not equals
    And(a=selEquals, b=sel[0], out=sel11); // true if sel[0] == 1 and sel equals
    And(a=selEquals, b=notSel0, out=sel00); // ture if sel[0] == 0 and sel equals
    
    // each possibility is calculated
    And(a=in, b=sel00, out=a);
    And(a=in, b=sel01, out=b);
    And(a=in, b=sel10, out=c);
    And(a=in, b=sel11, out=d);
}